{"version":3,"file":"static/js/242.38bde83e.chunk.js","mappings":"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","sources":["components/layout-components/User-profile/AddressEditableDisplay.js","components/layout-components/User-profile/AddressDisplay.js","components/layout-components/User-profile/Address.js","components/layout-components/User-profile/BillingView.js","components/layout-components/User-profile/PrimaryIndustry.js","views/app-views/profile/index.js"],"sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux';\nimport {onIsToEditShippingAddressChange}  from '../../../redux/actions/Lrn';\nimport { withRouter } from \"react-router-dom\";\nimport IntlMessage from \"../../util-components/IntlMessage\";\nimport { Input, Row, Col, Card, Form, Upload, Button } from 'antd';\nconst { Dragger } = Upload;\n\nconst setLocale = (isLocaleOn, localeKey) =>{\t\t\n\treturn isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n}\n\n\nconst AddressEditableDisplay = props => {\n\tconst [form] = Form.useForm();\n\tconst { onIsToEditShippingAddressChange, userAddresses, shippingTabKey } = props;\t\n\tconst selectedAddress = userAddresses?.find(a => a.AddressTypeId?.toLowerCase() === shippingTabKey);\n\n\tform.setFieldsValue({\n\t\taddress1:selectedAddress?.Address1,\n\t\taddress2:selectedAddress?.Address2,\n\t\tcity: selectedAddress?.City,\n\t\tstate: selectedAddress?.CountryDivisionId,\n\t\tzip: selectedAddress?.PostalCodeId\n\n\t});\n\t\t\n\t\tconst rules = {\n\t\t\taddress1: [\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: 'Please enter street information',\n\t\t\t\t}\n\t\t\t],\n\t\t\tcity: [\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: 'Please enter city information',\n\t\t\t\t}\n\t\t\t],\n\t\t\tstate: [\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: 'Please enter state information',\n\t\t\t\t}\n\t\t\t],\t\t\n\t\t\tzip: [\t\t\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: 'Please enter zip information',\n\t\t\t\t}\n\t\t\t]\n\t}\n\n\tconst discardChanges = () => {\n\t\tonIsToEditShippingAddressChange(false);\n\t}\n\n\tconst onFinish = () => {\n\t\t// setSubmitLoading(true)\n\t\t// form.validateFields().then(values => {\n\t\t// \tsetTimeout(() => {\n\t\t// \t\tsetSubmitLoading(false)\n\t\t// \t\tmessage.success(`Address updated`);\n\t\t// \t}, 1500);\n\t\t// }).catch(info => {\n\t\t// \tsetSubmitLoading(false)\n\t\t// \tconsole.log('info', info)\n\t\t// \tmessage.error('Please enter all required field ');\n\t\t// });\n\t};\n\n\treturn(\t\n\t\t<div>\n\t\t\t<Row gutter={16}>\n\t\t\t\t<Col xs={24} sm={24} md={17}>\n\t\t\t\t\t<Card bordered={false}>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\tname=\"user_addresses\"\n\t\t\t\t\t\t\tclassName=\"ant-advanced-search-form\"\n\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>Street address 1:</div>\n\t\t\t\t\t\t<Form.Item name=\"address1\" rules={rules.address1}>\n\t\t\t\t\t\t\t<Input placeholder=\"Address #1\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div>Street address 2 (optional):</div>\n\t\t\t\t\t\t<Form.Item name=\"address2\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Input placeholder=\"Address #2 (optional)\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div>City:</div>\n\t\t\t\t\t\t<Form.Item name=\"city\" rules={rules.city}>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Input placeholder=\"City\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div>State:</div>\n\t\t\t\t\t\t<Form.Item name=\"state\" rules={rules.state}>\n\t\t\t\t\t\t\t<Input placeholder=\"State\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div>Zip-Code:</div>\n\t\t\t\t\t\t<Form.Item name=\"zip\" rules={rules.zip}>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Input placeholder=\"Zip code\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Button className=\"mr-2\" onClick={() => discardChanges()}>Discard</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => onFinish()} htmlType=\"submit\" >\n\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\t\t\t\t\t\t\n\t\t\t</Row>\n\t\t</div>\t\t\n\t)\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn bindActionCreators({\n\t\tonIsToEditShippingAddressChange: onIsToEditShippingAddressChange\n\t}, dispatch)\n}\n\nconst mapStateToProps = ({lrn}) => {\n\tconst {keycloakRedux, isToEditShippingAddress, shippingTabKey, userAddresses} = lrn;\n\treturn {keycloakRedux, isToEditShippingAddress, shippingTabKey, userAddresses} \n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddressEditableDisplay));\n","import React, {Component} from 'react'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux';\nimport {onShippingKeyTabChange, onIsToEditShippingAddressChange}  from '../../../redux/actions/Lrn';\nimport { withRouter } from \"react-router-dom\";\nimport IntlMessage from \"../../util-components/IntlMessage\";\nimport { Row, Col, Card } from 'antd';\n\nclass AddressDisplay extends Component {\n\n\tsetLocale = (isLocaleOn, localeKey) =>{\t\t\n\t\treturn isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\t}\t\n\n    componentDidMount() {\n\t}\n\n\trender(){ \n\t\tconst selectedAddress = this.props.userAddresses?.find(a => a.AddressTypeId?.toLowerCase() === this.props.shippingTabKey);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t<Col xs={24} sm={24} md={17}>\n\t\t\t\t\t<Card bordered={false}>\n\t\t\t\t\t\t<h4>{selectedAddress?.Address1}</h4>\n\t\t\t\t\t\t{selectedAddress?.Address2 && <h4>{selectedAddress?.Address2}</h4>}\n\t\t\t\t\t\t<h4>{`${selectedAddress?.City}, ${selectedAddress?.CountryDivisionId}, ${selectedAddress?.PostalCodeId}`}</h4>\n\t\t\t\t\t\t<h4>{selectedAddress?.CountryId}</h4>\n\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\t\t\t\t\t\t\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t)\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn bindActionCreators({\n\t\tonShippingKeyTabChange: onShippingKeyTabChange,\n\t\tonIsToEditShippingAddressChange: onIsToEditShippingAddressChange\n\t}, dispatch)\n}\n\nconst mapStateToProps = ({lrn}) => {\n\tconst {shippingTabKey, isToEditShippingAddress, userAddresses} = lrn;\n\treturn {shippingTabKey, isToEditShippingAddress, userAddresses} \n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddressDisplay));\n","import React, {Component} from 'react'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux';\nimport {onShippingKeyTabChange, onIsToEditShippingAddressChange}  from '../../../redux/actions/Lrn';\nimport { withRouter } from \"react-router-dom\";\nimport IntlMessage from \"../../util-components/IntlMessage\";\nimport AddressEditableDisplay from \"./AddressEditableDisplay\";\nimport AddressDisplay from \"./AddressDisplay\";\n\nclass Address extends Component {\n\n\tsetLocale = (isLocaleOn, localeKey) =>{\t\t\n\t\treturn isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\t}\t\n\n    componentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate() {\n\n\t}\n\n\trender(){ \n\t\tif(this.props.isToEditShippingAddress){\n\t\t\treturn(\t\n\t\t\t\t<div>\n\t\t\t\t\t<AddressEditableDisplay/>\t\t\t\t\n\t\t\t\t</div>\t\t\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AddressDisplay/>\n\t\t\t</div>\n\t\t)\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn bindActionCreators({\n\t\tonShippingKeyTabChange: onShippingKeyTabChange,\n\t\tonIsToEditShippingAddressChange: onIsToEditShippingAddressChange\n\t}, dispatch)\n}\n\nconst mapStateToProps = ({lrn}) => {\n\tconst {shippingTabKey, isToEditShippingAddress} = lrn;\n\treturn {shippingTabKey, isToEditShippingAddress} \n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Address));\n","import React, {Component} from 'react'\nimport { Row, Col, Card } from 'antd';\nimport Iframe from 'react-iframe';\n\nclass BillingView extends Component {\n    componentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate() {\n\n\t}\n\n\trender(){ \n\t\treturn (\n\t\t\t<div>\t\t\t\n\t\t\t\t<div>\n\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t<Col xs={24} sm={24} md={17}>\n\t\t\t\t\t<Card bordered={false}>\t\t\t\t\t\t\n\t\t\t\t\t\t<Iframe url={`https://www.youtube.com/embed/tgbNymZ7vqY`}\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\theight=\"600px\"\n\t\t\t\t\t\t\tid=\"internalIFrame\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\t\t\t\t\t\t\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n    }\n}\n\nexport default BillingView;\n","import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux';\nimport {onIsToEditUserProfileChange}  from '../../../redux/actions/Lrn';\nimport { withRouter } from \"react-router-dom\";\nimport IntlMessage from \"../../util-components/IntlMessage\";\nimport { Row, Col, Card, Form, Button, Select } from 'antd';\nconst { Option } = Select;\n\nconst setLocale = (isLocaleOn, localeKey) =>{\t\t\n\treturn isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n}\n\nconst PrimaryIndustries = [\n\t'Home Care',\n\t'Home Health',\n\t'Hospice',\n\t'Skilled Nursing Facilities',\n\t'Long Term Acute Care',\n\t'Assisted Living',\n\t'Inpatient Rehab',\n\t'Independent Living',\n  ];\n\nconst PrimaryIndustry = props => {\n\tconst [form] = Form.useForm();\n\tconst { onIsToEditUserProfileChange } = props;\t\n\n\tform.setFieldsValue({\n\t\tprimaryIndustry:'Home Care'\n\n\t});\n\t\t\n\tconst discardChanges = () => {\n\t\tonIsToEditUserProfileChange(false);\n\t}\n\n\tconst onFinish = () => {\n\t\t// setSubmitLoading(true)\n\t\t// form.validateFields().then(values => {\n\t\t// \tsetTimeout(() => {\n\t\t// \t\tsetSubmitLoading(false)\n\t\t// \t\tmessage.success(`Address updated`);\n\t\t// \t}, 1500);\n\t\t// }).catch(info => {\n\t\t// \tsetSubmitLoading(false)\n\t\t// \tconsole.log('info', info)\n\t\t// \tmessage.error('Please enter all required field ');\n\t\t// });\n\t};\n\n\treturn(\t\n\t\t<div>\n\t\t\t<Row gutter={16}>\n\t\t\t\t<Col xs={24} sm={24} md={17}>\n\t\t\t\t\t<Card bordered={false}>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\tname=\"user_primary_industry\"\n\t\t\t\t\t\t\tclassName=\"ant-advanced-search-form\"\n\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item name=\"primaryIndustry\" label=\"Select your primary Industry\">\n\t\t\t\t\t\t\t<Select>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tPrimaryIndustries.map(elm => (\n\t\t\t\t\t\t\t\t<Option value={elm} key={elm}>\n\t\t\t\t\t\t\t\t\t<span className=\"text-capitalize font-weight-semibold\">{elm}</span>\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Button className=\"mr-2\" onClick={() => discardChanges()}>Discard</Button>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={() => onFinish()} htmlType=\"submit\" >Update</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\t\t\t\t\t\t\n\t\t\t</Row>\n\t\t</div>\t\t\n\t)\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn bindActionCreators({\n\t\tonIsToEditUserProfileChange: onIsToEditUserProfileChange\n\t}, dispatch)\n}\n\nconst mapStateToProps = ({lrn}) => {\n\tconst {keycloakRedux, isToEditUserProfile} = lrn;\n\treturn {keycloakRedux, isToEditUserProfile} \n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PrimaryIndustry));\n","import React, {Component} from 'react'\nimport { bindActionCreators } from 'redux';\nimport {connect} from 'react-redux';\nimport {onShippingKeyTabChange, onIsToEditShippingAddressChange, onIsToEditUserProfileChange, onAddressRequestLoad}  from '../../../redux/actions/Lrn';\nimport { withRouter } from \"react-router-dom\";\nimport IntlMessage from \"../../../components/util-components/IntlMessage\";\nimport Address from \"../../../components/layout-components/User-profile/Address\";\nimport BillingView from \"../../../components/layout-components/User-profile/BillingView\";\nimport PrimaryIndustry from \"../../../components/layout-components/User-profile/PrimaryIndustry\";\nimport { \n\tEllipsisOutlined, \n  } from '@ant-design/icons'; \nimport { Row, Col, Card, Dropdown } from 'antd';\nconst { Meta } = Card;\n\nclass Profile extends Component {\n\n\tsetLocale = (isLocaleOn, localeKey) =>{\t\t\n\t\treturn isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\n\t}\t\n\n    componentDidMount() {\n\t\tthis.props.onAddressRequestLoad()\n\t}\n\n\tcardDropdown = (menu) => (\n\t\t<Dropdown overlay={menu} trigger={['click']} placement=\"bottomRight\">\n\t\t  <a href=\"/#\" className=\"text-gray font-size-lg\" onClick={e => e.preventDefault()}>\n\t\t\t<EllipsisOutlined />\n\t\t  </a>\n\t\t</Dropdown>\n\t  )\n\n\trender(){ \n\t\t// If not authenticated then send them back to main\n\t\tif(!this.props.keycloakRedux.authenticated){\n\t\t\tthis.props.history.push('/');\t\n\t\t}\n\n\t\t  // we will pass the type of address through redux rather than through component props\n\t\t  const shippingContentList = {\n\t\t\tphysical: <Address/>,\n\t\t\tshipping: <Address/>,\n\t\t\tbilling: <BillingView/>,\n\t\t\tmailing: <Address/>,\n\t\t  };\n\n        return(\t\n\t\t\t<div>\n\t\t\t\t<div className=\"container customerName\" >\n\t\t\t\t<Row gutter={16}>\t\n\t\t\t\t\t<Col lg={8}>\t\t\t\n\t\t\t\t\t\t<Card bordered={true}>\n\t\t\t\t\t\t<h1>User Profile</h1>\t\t\n\t\t\t\t\t\t\t<Card bordered={false}\n\t\t\t\t\t\t\t\tcover={\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=\"company logo\"\n\t\t\t\t\t\t\t\t\tsrc=\"https://info.com/hubfs/Inform%20Letter%20Templates/s.png\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t<Meta title=\"Username\" description=\"here goes the username\" />\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t<Meta title=\"Registered Email\" description=\"temp@temp.com\" />\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={16}>\n\t\t\t\t\t<Card title=\"General Information\"  style={{ width: '100%' }} \n\t\t\t\t\t\t  actions={[\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t!this.props.isToEditUserProfile ? <span onClick={() => this.props.onIsToEditUserProfileChange(true)}>EDIT</span> : <span></span>,\n\t\t\t\t\t\t\t]}>\n\n\n\t\t\t\t\t\t<Card bordered={false}>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{!this.props.isToEditUserProfile ? <Meta title=\"Primary Industry\" description=\"Home care\" /> : <PrimaryIndustry />}\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<Meta title=\"Company Name\" description=\"Fallen Angels\" />\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card title=\"Addresses on File\" bordered={true} >\n\t\t\t\t\t\t<Card\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttabList={this.props.tabIndexedAddresses}\n\t\t\t\t\t\t\tactiveTabKey={this.props.shippingTabKey}\n\t\t\t\t\t\t\tonTabChange={key => {\n\t\t\t\t\t\t\t\tthis.props.onShippingKeyTabChange(key);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t(!this.props.isToEditShippingAddress && this.props.shippingTabKey !== \"billing\") ? <span onClick={() => this.props.onIsToEditShippingAddressChange(true)}>EDIT</span> : <span></span>,\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{shippingContentList[this.props.shippingTabKey]}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\t\t\n\t\t)\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn bindActionCreators({\n\t\tonShippingKeyTabChange: onShippingKeyTabChange,\n\t\tonIsToEditShippingAddressChange: onIsToEditShippingAddressChange,\n\t\tonIsToEditUserProfileChange: onIsToEditUserProfileChange,\n\t\tonAddressRequestLoad: onAddressRequestLoad\n\t}, dispatch)\n}\n\nconst mapStateToProps = ({lrn}) => {\n\tconst {keycloakRedux, shippingTabKey, isToEditShippingAddress, isToEditUserProfile, userAddresses, tabIndexedAddresses} = lrn;\n\treturn {keycloakRedux, shippingTabKey, isToEditShippingAddress, isToEditUserProfile, userAddresses, tabIndexedAddresses} \n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));\n"],"names":["Upload","withRouter","connect","lrn","keycloakRedux","isToEditShippingAddress","shippingTabKey","userAddresses","dispatch","bindActionCreators","onIsToEditShippingAddressChange","props","Form","form","selectedAddress","find","a","AddressTypeId","toLowerCase","setFieldsValue","address1","Address1","address2","Address2","city","City","state","CountryDivisionId","zip","PostalCodeId","rules","required","message","gutter","xs","sm","md","bordered","layout","name","className","initialValues","placeholder","onClick","type","htmlType","AddressDisplay","setLocale","isLocaleOn","localeKey","id","toString","this","CountryId","Component","onShippingKeyTabChange","Address","BillingView","url","width","height","Option","Select","PrimaryIndustries","isToEditUserProfile","onIsToEditUserProfileChange","primaryIndustry","label","map","elm","value","Meta","Card","Profile","cardDropdown","menu","overlay","trigger","placement","href","e","preventDefault","EllipsisOutlined","onAddressRequestLoad","authenticated","history","push","shippingContentList","physical","shipping","billing","mailing","lg","cover","alt","src","title","description","style","actions","tabList","tabIndexedAddresses","activeTabKey","onTabChange","key"],"sourceRoot":""}