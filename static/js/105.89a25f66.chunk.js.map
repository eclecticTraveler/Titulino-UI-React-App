{"version":3,"file":"static/js/105.89a25f66.chunk.js","mappings":"iKASA,UANc,WACb,OACC,uCAED,C,gHCFKA,EAAkB,CACvBC,gBAAiB,8BACjBC,iBAAkB,YAClBC,eAAgB,SA8BjB,UA3BiB,SAAAC,GAChB,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,YAAhB,IAC/B,OACC,gBAAKC,UAAU,QAAQC,MAAOV,EAA9B,UACC,gBAAKS,UAAU,4DAAf,UACC,SAAC,IAAD,CAAKE,QAAQ,SAAb,UACC,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAjC,UACC,SAAC,IAAD,WACC,iBAAKN,UAAU,OAAf,WACC,iBAAKA,UAAU,cAAf,WACC,gBAAKA,UAAU,YAAYO,IAAG,eAAoB,UAAVX,EAAoB,WAAY,kBAAoBY,IAAI,MAChG,wDAA8B,cAAGC,KAAK,mBAAR,4BAE/B,SAAC,IAAD,CAAKP,QAAQ,SAAb,UACC,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACC,SAAC,KAAD,UAAeX,oBAUxB,C,4CCqKD,IAVkB,WACjB,OACC,4BACC,wDACA,mBACA,4CAGF,C","sources":["views/auth-views/authentication/keycloak-login/index.js","views/auth-views/authentication/login-1/index.js","views/auth-views/components/LoginForm.js"],"sourcesContent":["import React from 'react'\r\nimport LoginOne from '../login-1'\r\n\r\nconst Login = () => {\r\n\treturn (\r\n\t\t<h1>JJJSJSJSJSJ</h1>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst LoginOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p>Don't have an account yet? <a href=\"/auth/register-1\">Sign Up</a></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<LoginForm {...props} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginOne\r\n","// import React, { useEffect } from 'react';\n// import { connect } from \"react-redux\";\n// import { Button, Form, Input, Divider, Alert } from \"antd\";\n// import { MailOutlined, LockOutlined } from '@ant-design/icons';\n// import PropTypes from 'prop-types';\n// import { GoogleSVG, FacebookSVG } from 'assets/svg/icon';\n// import CustomIcon from 'components/util-components/CustomIcon'\n// import {  \n// \tshowLoading, \n// \tshowAuthMessage, \n// \thideAuthMessage,\n// \tauthenticated\n// } from 'redux/actions/Auth';\n// import JwtAuthService from 'services/JwtAuthService'\n// import { useHistory } from \"react-router-dom\";\n// import { motion } from \"framer-motion\"\n\n// export const LoginForm = (props) => {\n// \tlet history = useHistory();\n\n// \tconst { \n// \t\totherSignIn, \n// \t\tshowForgetPassword, \n// \t\thideAuthMessage,\n// \t\tonForgetPasswordClick,\n// \t\tshowLoading,\n// \t\textra,\n// \t\tloading,\n// \t\tshowMessage,\n// \t\tmessage,\n// \t\tauthenticated,\n// \t\tshowAuthMessage,\n// \t\ttoken,\n// \t\tredirect,\n// \t\tallowRedirect\n// \t} = props\n\n// \tconst onLogin = values => {\n// \t\tshowLoading()\n// \t\tconst fakeToken = 'fakeToken'\n// \t\tJwtAuthService.login(values).then(resp => {\n// \t\t\tauthenticated(fakeToken)\n// \t\t}).then(e => {\n// \t\t\tshowAuthMessage(e)\n// \t\t})\n// \t};\n\n// \tconst onGoogleLogin = () => {\n// \t\tshowLoading()\n// \t}\n\n// \tconst onFacebookLogin = () => {\n// \t\tshowLoading()\n// \t}\n\n// \tuseEffect(() => {\n// \t\tif (token !== null && allowRedirect) {\n// \t\t\thistory.push(redirect)\n// \t\t}\n// \t\tif(showMessage) {\n// \t\t\tsetTimeout(() => {\n// \t\t\thideAuthMessage();\n// \t\t}, 3000);\n// \t\t}\n// \t});\n\t\n// \tconst renderOtherSignIn = (\n// \t\t<div>\n// \t\t\t<Divider>\n// \t\t\t\t<span className=\"text-muted font-size-base font-weight-normal\">or connect with</span>\n// \t\t\t</Divider>\n// \t\t\t<div className=\"d-flex justify-content-center\">\n// \t\t\t\t<Button \n// \t\t\t\t\tonClick={() => onGoogleLogin()} \n// \t\t\t\t\tclassName=\"mr-2\" \n// \t\t\t\t\tdisabled={loading} \n// \t\t\t\t\ticon={<CustomIcon svg={GoogleSVG}/>}\n// \t\t\t\t>\n// \t\t\t\t\tGoogle\n// \t\t\t\t</Button>\n// \t\t\t\t<Button \n// \t\t\t\t\tonClick={() => onFacebookLogin()} \n// \t\t\t\t\ticon={<CustomIcon svg={FacebookSVG}/>}\n// \t\t\t\t\tdisabled={loading} \n// \t\t\t\t>\n// \t\t\t\t\tFacebook\n// \t\t\t\t</Button>\n// \t\t\t</div>\n// \t\t</div>\n// \t)\n\n// \treturn (\n// \t\t<>\n// \t\t\t<motion.div \n// \t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \n// \t\t\t\tanimate={{ \n// \t\t\t\t\topacity: showMessage ? 1 : 0,\n// \t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \n// \t\t\t\t}}> \n// \t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\n// \t\t\t</motion.div>\n// \t\t\t<Form \n// \t\t\t\tlayout=\"vertical\" \n// \t\t\t\tname=\"login-form\"\n// \t\t\t\tonFinish={onLogin}\n// \t\t\t>\n// \t\t\t\t<Form.Item \n// \t\t\t\t\tname=\"email\" \n// \t\t\t\t\tlabel=\"Email\" \n// \t\t\t\t\trules={[\n// \t\t\t\t\t\t{ \n// \t\t\t\t\t\t\trequired: true,\n// \t\t\t\t\t\t\tmessage: 'Please input your email',\n// \t\t\t\t\t\t},\n// \t\t\t\t\t\t{ \n// \t\t\t\t\t\t\ttype: 'email',\n// \t\t\t\t\t\t\tmessage: 'Please enter a validate email!'\n// \t\t\t\t\t\t}\n// \t\t\t\t\t]}>\n// \t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\n// \t\t\t\t</Form.Item>\n// \t\t\t\t<Form.Item \n// \t\t\t\t\tname=\"password\" \n// \t\t\t\t\tlabel={\n// \t\t\t\t\t\t<div className={`${showForgetPassword? 'd-flex justify-content-between w-100 align-items-center' : ''}`}>\n// \t\t\t\t\t\t\t<span>Password</span>\n// \t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\tshowForgetPassword && \n// \t\t\t\t\t\t\t\t<span \n// \t\t\t\t\t\t\t\t\tonClick={() => onForgetPasswordClick} \n// \t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tForget Password?\n// \t\t\t\t\t\t\t\t</span>\n// \t\t\t\t\t\t\t} \n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t} \n// \t\t\t\t\trules={[\n// \t\t\t\t\t\t{ \n// \t\t\t\t\t\t\trequired: true,\n// \t\t\t\t\t\t\tmessage: 'Please input your password',\n// \t\t\t\t\t\t}\n// \t\t\t\t\t]}\n// \t\t\t\t>\n// \t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\n// \t\t\t\t</Form.Item>\n// \t\t\t\t<Form.Item>\n// \t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\n// \t\t\t\t\t\tSign In\n// \t\t\t\t\t</Button>\n// \t\t\t\t</Form.Item>\n// \t\t\t\t{\n// \t\t\t\t\totherSignIn ? renderOtherSignIn : null\n// \t\t\t\t}\n// \t\t\t\t{ extra }\n// \t\t\t</Form>\n// \t\t</>\n// \t)\n// }\n\n// LoginForm.propTypes = {\n// \totherSignIn: PropTypes.bool,\n// \tshowForgetPassword: PropTypes.bool,\n// \textra: PropTypes.oneOfType([\n// \t\tPropTypes.string,\n// \t\tPropTypes.element\n// \t]),\n// };\n\n// LoginForm.defaultProps = {\n// \totherSignIn: true,\n// \tshowForgetPassword: false\n// };\n\n// const mapStateToProps = ({auth}) => {\n// \tconst {loading, message, showMessage, token, redirect} = auth;\n//   \treturn {loading, message, showMessage, token, redirect}\n// }\n\n// const mapDispatchToProps = {\n// \tshowAuthMessage,\n// \tshowLoading,\n// \thideAuthMessage,\n// \tauthenticated\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n\n\nimport React from 'react'\n\nconst LoginForm = () => {\n\treturn (\n\t\t<div>\n\t\t\t<strong>LoginForm Default Page</strong> \n\t\t\t<br />\n\t\t\t<p> INSERT HERE: </p>\n\t\t</div>\n\t)\n}\n\nexport default LoginForm\n"],"names":["backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","props","theme","useSelector","state","currentTheme","className","style","justify","xs","sm","md","lg","src","alt","href"],"sourceRoot":""}